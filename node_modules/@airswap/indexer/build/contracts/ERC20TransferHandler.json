{
  "contractName": "ERC20TransferHandler",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "transferTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"transferTokens(address,address,uint256,uint256,address)\":{\"params\":{\"amount\":\"uint256 Amount for ERC-20\",\"from\":\"address Wallet address to transfer from\",\"id\":\"uint256 ID, must be 0 for this contract\",\"to\":\"address Wallet address to transfer to\",\"token\":\"address Contract address of token\"},\"return\":\"bool on success of the token transfer\"}}},\"userdoc\":{\"methods\":{\"transferTokens(address,address,uint256,uint256,address)\":{\"notice\":\"Function to wrap safeTransferFrom for ERC20\"}}}},\"settings\":{\"compilationTarget\":{\"@airswap/transfers/contracts/handlers/ERC20TransferHandler.sol\":\"ERC20TransferHandler\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@airswap/transfers/contracts/handlers/ERC20TransferHandler.sol\":{\"keccak256\":\"0x90ff65438114030ea3a85366782b189de7522937f9faa45e1fa9b4d7db305490\",\"urls\":[\"bzz-raw://c7219488fb3fea0853fad95733188ec74bb7c98aca93e1f63527f4026e77d706\",\"dweb:/ipfs/Qmf62VtZDWM1W77VAfN3SLf3cBY8eV6ZiF7FErcPQi3k1M\"]},\"@airswap/transfers/contracts/interfaces/ITransferHandler.sol\":{\"keccak256\":\"0x85c9e8ec60e556c48d5cefb8823bc61e8ce776b539f6dca7395026e4a91fc2dd\",\"urls\":[\"bzz-raw://9be7a3b072539e28df34462d673f5fc3d4c32e745e821663df62de02c5733e8f\",\"dweb:/ipfs/QmQpzZ4sgTFpagPUjFMTEcoh5ZZsFYmoXLCYrsqFrCByeY\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506104ac806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e2ecf09314610030575b600080fd5b610081600480360360a081101561004657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013582169160408201359160608101359160809091013516610095565b604080519115158252519081900360200190f35b6000821561010457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f49445f494e56414c494400000000000000000000000000000000000000000000604482015290519081900360640190fd5b61012c73ffffffffffffffffffffffffffffffffffffffff831687878763ffffffff61013816565b50600195945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526101cd9085906101d3565b50505050565b6101f28273ffffffffffffffffffffffffffffffffffffffff16610411565b61025d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106102c657805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610289565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610328576040519150601f19603f3d011682016040523d82523d6000602084013e61032d565b606091505b50915091508161039e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156101cd578080602001905160208110156103ba57600080fd5b50516101cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061044e602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906104455750808214155b94935050505056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a723158205418d91dc9fb169f689ca4d023f7eb3db0cd18d089d5f64670f5229c28d1099164736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e2ecf09314610030575b600080fd5b610081600480360360a081101561004657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013582169160408201359160608101359160809091013516610095565b604080519115158252519081900360200190f35b6000821561010457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f49445f494e56414c494400000000000000000000000000000000000000000000604482015290519081900360640190fd5b61012c73ffffffffffffffffffffffffffffffffffffffff831687878763ffffffff61013816565b50600195945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526101cd9085906101d3565b50505050565b6101f28273ffffffffffffffffffffffffffffffffffffffff16610411565b61025d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106102c657805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610289565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610328576040519150601f19603f3d011682016040523d82523d6000602084013e61032d565b606091505b50915091508161039e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156101cd578080602001905160208110156103ba57600080fd5b50516101cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061044e602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906104455750808214155b94935050505056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a723158205418d91dc9fb169f689ca4d023f7eb3db0cd18d089d5f64670f5229c28d1099164736f6c634300050c0032",
  "sourceMap": "788:713:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;788:713:16;;;;;;;",
  "deployedSourceMap": "788:713:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;788:713:16;;;;;;;;;;;;;;;;;;;1246:253;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1246:253:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1381:4;1401:7;;1393:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1429:48;:30;;;1460:4;1466:2;1470:6;1429:48;:30;:48;:::i;:::-;-1:-1:-1;1490:4:16;1246:253;;;;;;;:::o;842:202:28:-;968:68;;;991:18;968:68;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;968:68:28;;;;;;;;25:18:-1;;61:17;;968:68:28;182:15:-1;991:27:28;179:29:-1;160:49;;942:95:28;;961:5;;942:18;:95::i;:::-;842:202;;;;:::o;2666:1095::-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:28;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:28;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3667:30:28;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:797:29;617:4;1265:20;;1110:66;1304:15;;;;;:42;;;1335:11;1323:8;:23;;1304:42;1296:51;557:797;-1:-1:-1;;;;557:797:29:o",
  "source": "/*\n  Copyright 2020 Swap Holdings Ltd.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\npragma solidity 0.5.12;\n\nimport \"../interfaces/ITransferHandler.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\";\n\ncontract ERC20TransferHandler is ITransferHandler {\n  using SafeERC20 for IERC20;\n\n /**\n  * @notice Function to wrap safeTransferFrom for ERC20\n  * @param from address Wallet address to transfer from\n  * @param to address Wallet address to transfer to\n  * @param amount uint256 Amount for ERC-20\n  * @param id uint256 ID, must be 0 for this contract\n  * @param token address Contract address of token\n  * @return bool on success of the token transfer\n  */\n  function transferTokens(\n    address from,\n    address to,\n    uint256 amount,\n    uint256 id,\n    address token\n  ) external returns (bool) {\n    require(id == 0, \"ID_INVALID\");\n    IERC20(token).safeTransferFrom(from, to, amount);\n    return true;\n  }\n}",
  "sourcePath": "@airswap/transfers/contracts/handlers/ERC20TransferHandler.sol",
  "ast": {
    "absolutePath": "@airswap/transfers/contracts/handlers/ERC20TransferHandler.sol",
    "exportedSymbols": {
      "ERC20TransferHandler": [
        3432
      ]
    },
    "id": 3433,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3389,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "584:23:16"
      },
      {
        "absolutePath": "@airswap/transfers/contracts/interfaces/ITransferHandler.sol",
        "file": "../interfaces/ITransferHandler.sol",
        "id": 3390,
        "nodeType": "ImportDirective",
        "scope": 3433,
        "sourceUnit": 3451,
        "src": "609:44:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 3391,
        "nodeType": "ImportDirective",
        "scope": 3433,
        "sourceUnit": 5848,
        "src": "654:64:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 3392,
        "nodeType": "ImportDirective",
        "scope": 3433,
        "sourceUnit": 6068,
        "src": "719:67:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3393,
              "name": "ITransferHandler",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3450,
              "src": "821:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransferHandler_$3450",
                "typeString": "contract ITransferHandler"
              }
            },
            "id": 3394,
            "nodeType": "InheritanceSpecifier",
            "src": "821:16:16"
          }
        ],
        "contractDependencies": [
          3450
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3432,
        "linearizedBaseContracts": [
          3432,
          3450
        ],
        "name": "ERC20TransferHandler",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3397,
            "libraryName": {
              "contractScope": null,
              "id": 3395,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6067,
              "src": "848:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$6067",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "842:27:16",
            "typeName": {
              "contractScope": null,
              "id": 3396,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5847,
              "src": "862:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5847",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "body": {
              "id": 3430,
              "nodeType": "Block",
              "src": "1387:112:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3413,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1401:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1407:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1401:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49445f494e56414c4944",
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1410:12:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b2aa80524370a8925a1796e722bc6f180fcfedec67c4f01e274f2521c15576e",
                          "typeString": "literal_string \"ID_INVALID\""
                        },
                        "value": "ID_INVALID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b2aa80524370a8925a1796e722bc6f180fcfedec67c4f01e274f2521c15576e",
                          "typeString": "literal_string \"ID_INVALID\""
                        }
                      ],
                      "id": 3412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6160,
                        6161
                      ],
                      "referencedDeclaration": 6161,
                      "src": "1393:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:30:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3423,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3399,
                        "src": "1460:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3424,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3401,
                        "src": "1466:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3425,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3403,
                        "src": "1470:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3420,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3407,
                            "src": "1436:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3419,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5847,
                          "src": "1429:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5847_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1429:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5905,
                      "src": "1429:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5847_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5847_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3427,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1490:4:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3411,
                  "id": 3429,
                  "nodeType": "Return",
                  "src": "1483:11:16"
                }
              ]
            },
            "documentation": "@notice Function to wrap safeTransferFrom for ERC20\n@param from address Wallet address to transfer from\n@param to address Wallet address to transfer to\n@param amount uint256 Amount for ERC-20\n@param id uint256 ID, must be 0 for this contract\n@param token address Contract address of token\n@return bool on success of the token transfer",
            "id": 3431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3399,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1275:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3401,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1293:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3403,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1309:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3405,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1329:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3407,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1345:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1269:93:16"
            },
            "returnParameters": {
              "id": 3411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3410,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1381:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:6:16"
            },
            "scope": 3432,
            "src": "1246:253:16",
            "stateMutability": "nonpayable",
            "superFunction": 3449,
            "visibility": "external"
          }
        ],
        "scope": 3433,
        "src": "788:713:16"
      }
    ],
    "src": "584:917:16"
  },
  "legacyAST": {
    "absolutePath": "@airswap/transfers/contracts/handlers/ERC20TransferHandler.sol",
    "exportedSymbols": {
      "ERC20TransferHandler": [
        3432
      ]
    },
    "id": 3433,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3389,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "584:23:16"
      },
      {
        "absolutePath": "@airswap/transfers/contracts/interfaces/ITransferHandler.sol",
        "file": "../interfaces/ITransferHandler.sol",
        "id": 3390,
        "nodeType": "ImportDirective",
        "scope": 3433,
        "sourceUnit": 3451,
        "src": "609:44:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 3391,
        "nodeType": "ImportDirective",
        "scope": 3433,
        "sourceUnit": 5848,
        "src": "654:64:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 3392,
        "nodeType": "ImportDirective",
        "scope": 3433,
        "sourceUnit": 6068,
        "src": "719:67:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3393,
              "name": "ITransferHandler",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3450,
              "src": "821:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITransferHandler_$3450",
                "typeString": "contract ITransferHandler"
              }
            },
            "id": 3394,
            "nodeType": "InheritanceSpecifier",
            "src": "821:16:16"
          }
        ],
        "contractDependencies": [
          3450
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3432,
        "linearizedBaseContracts": [
          3432,
          3450
        ],
        "name": "ERC20TransferHandler",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3397,
            "libraryName": {
              "contractScope": null,
              "id": 3395,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6067,
              "src": "848:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$6067",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "842:27:16",
            "typeName": {
              "contractScope": null,
              "id": 3396,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5847,
              "src": "862:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5847",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "body": {
              "id": 3430,
              "nodeType": "Block",
              "src": "1387:112:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3413,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3405,
                          "src": "1401:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1407:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1401:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49445f494e56414c4944",
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1410:12:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b2aa80524370a8925a1796e722bc6f180fcfedec67c4f01e274f2521c15576e",
                          "typeString": "literal_string \"ID_INVALID\""
                        },
                        "value": "ID_INVALID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b2aa80524370a8925a1796e722bc6f180fcfedec67c4f01e274f2521c15576e",
                          "typeString": "literal_string \"ID_INVALID\""
                        }
                      ],
                      "id": 3412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6160,
                        6161
                      ],
                      "referencedDeclaration": 6161,
                      "src": "1393:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:30:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3423,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3399,
                        "src": "1460:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3424,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3401,
                        "src": "1466:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3425,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3403,
                        "src": "1470:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3420,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3407,
                            "src": "1436:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3419,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5847,
                          "src": "1429:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5847_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1429:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5905,
                      "src": "1429:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5847_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5847_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:48:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3427,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:48:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1490:4:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3411,
                  "id": 3429,
                  "nodeType": "Return",
                  "src": "1483:11:16"
                }
              ]
            },
            "documentation": "@notice Function to wrap safeTransferFrom for ERC20\n@param from address Wallet address to transfer from\n@param to address Wallet address to transfer to\n@param amount uint256 Amount for ERC-20\n@param id uint256 ID, must be 0 for this contract\n@param token address Contract address of token\n@return bool on success of the token transfer",
            "id": 3431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3399,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1275:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3401,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1293:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3403,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1309:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3405,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1329:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3407,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1345:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1269:93:16"
            },
            "returnParameters": {
              "id": 3411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3410,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3431,
                  "src": "1381:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:6:16"
            },
            "scope": 3432,
            "src": "1246:253:16",
            "stateMutability": "nonpayable",
            "superFunction": 3449,
            "visibility": "external"
          }
        ],
        "scope": 3433,
        "src": "788:713:16"
      }
    ],
    "src": "584:917:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-03-10T22:01:11.455Z",
  "devdoc": {
    "methods": {
      "transferTokens(address,address,uint256,uint256,address)": {
        "params": {
          "amount": "uint256 Amount for ERC-20",
          "from": "address Wallet address to transfer from",
          "id": "uint256 ID, must be 0 for this contract",
          "to": "address Wallet address to transfer to",
          "token": "address Contract address of token"
        },
        "return": "bool on success of the token transfer"
      }
    }
  },
  "userdoc": {
    "methods": {
      "transferTokens(address,address,uint256,uint256,address)": {
        "notice": "Function to wrap safeTransferFrom for ERC20"
      }
    }
  }
}